name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt update && sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-lint

  unit:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt update && sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-unit

  integration:
    name: Integration Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.2.2
      with:
        channel: 'latest/stable'
        addons: '["dns", "storage", "rbac", "metallb:10.64.140.43-10.64.140.49"]'

    - name: Install dependencies
      run: |
        set -eux
        sudo snap install charmcraft --classic --channel=latest/candidate
        sudo snap install juju --classic
        sudo snap install juju-bundle --classic
        sudo snap install juju-wait --classic
        sudo apt update
        sudo apt install tox

    - name: Wait before bootstrap
      run: |
        set -eux
        sg microk8s -c 'microk8s status --wait-ready'
        kubectl wait --for=condition=available --timeout=5m -nkube-system deployment/coredns deployment/hostpath-provisioner

    - run: sg microk8s -c 'juju bootstrap microk8s uk8s'

    - run: sg microk8s -c 'tox -e integration -- --keep-models'
      timeout-minutes: 15

    - run: juju status
      if: failure()

    - run: kubectl get all -A
      if: failure()

    - run: kubectl describe virtualservices -A
      if: failure()

    - run: kubectl describe gateways -A
      if: failure()

    - run: kubectl describe deployments -A
      if: failure()

    - run: kubectl describe replicasets -A
      if: failure()

    - run: kubectl logs -n istio-system --tail 1000 -lapp.kubernetes.io/name=istio-pilot -c charm
      if: failure()

    - run: kubectl logs -n istio-system --tail 1000 -lapp.kubernetes.io/name=istio-ingressgateway-operator -c charm
      if: failure()
