name: MicroK8s Test

on:
  - push
  - pull_request

jobs:
  build:
    name: Deploy to microk8s
    runs-on: ubuntu-latest

    steps:
    # Check out code
    - name: Check out repo
      uses: actions/checkout@v2

    # Install dependencies
    - name: Install microk8s
      run: sudo snap install microk8s --classic
    - name: Install charm
      run: sudo snap install charm --classic
    - name: Install juju
      run: sudo snap install juju --classic --channel latest/edge
    - name: Install juju-helpers
      run: sudo snap install juju-helpers --classic --channel edge
    - name: Install juju-wait
      run: sudo snap install juju-wait --classic

    # Set up istio
    - name: Add user to microk8s group
      run: sudo usermod -a -G microk8s runner
    - name: Enable microk8s addons
      run: sudo microk8s.enable dns storage metallb:10.64.140.43-10.64.140.49 rbac
    - name: Bootstrap Juju
      run: sudo juju bootstrap microk8s uk8s
    - name: Add istio model
      run: sudo juju add-model istio-system microk8s
    - name: Build and deploy istio
      run: sudo juju bundle deploy --build
    - name: Delete juju admission webhook
      run: sudo microk8s.kubectl delete mutatingwebhookconfigurations/istio-system-model-admission
    - name: Wait for operator role to be created
      run: sleep 10
    - name: Set permissions for ingressgateway operator
      run: sudo microk8s.kubectl patch role -n istio-system istio-ingressgateway-operator -p '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"name":"istio-ingressgateway-operator"},"rules":[{"apiGroups":["*"],"resources":["*"],"verbs":["*"]}]}'
    - name: Wait for deployment
      run: sudo juju wait -wv

    # Deploy bookinfo application
    - name: Enable istio injection for default namespace
      run: sudo microk8s.kubectl label namespace default istio-injection=enabled
    - name: Deploy bookinfo application
      run: sudo microk8s.kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.5/samples/bookinfo/platform/kube/bookinfo.yaml
    - name: Create istio resources for bookinfo application
      run: sudo microk8s.kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.5/samples/bookinfo/networking/bookinfo-gateway.yaml
    - name: Wait for bookinfo application to become ready
      run: sudo microk8s.kubectl wait --for=condition=available deployment --all --timeout=5m

    # Test that bookinfo came up
    - name: Ensure bookinfo came up
      run: curl -fv http://10.64.140.43/productpage

    # Debug failures
    - name: Get pod statuses
      run: sudo microk8s.kubectl get all -A
      if: failure()
    - name: Describe deployments
      run: sudo microk8s.kubectl describe deployments -A
      if: failure()
    - name: Describe replicasets
      run: sudo microk8s.kubectl describe replicasets -A
      if: failure()
    - name: Get istio-pilot logs
      run: sudo microk8s.kubectl logs -n istio-system --tail 1000 -ljuju-app=istio-pilot
      if: failure()
    - name: Get istio-ingressgateway logs
      run: sudo microk8s.kubectl logs -n istio-system --tail 1000 -ljuju-app=istio-ingressgateway
      if: failure()
    - name: Get snap logs
      run: sudo snap logs -n 300 microk8s
      if: failure()
